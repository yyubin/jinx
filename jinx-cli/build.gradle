plugins {
    id 'java-library'
    id 'application'
    id 'maven-publish'
    id 'signing'
    id("io.github.sgtsilvio.gradle.maven-central-publishing") version "0.4.1"
}

dependencies {
    implementation project(':jinx-core')

    annotationProcessor project(':jinx-processor')

    implementation "info.picocli:picocli:${versions.picocli}"
    annotationProcessor "info.picocli:picocli-codegen:${versions.picocli}"

    implementation "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
    implementation "com.fasterxml.jackson.core:jackson-core:${versions.jackson}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}"
}

application {
    mainClass = 'org.jinx.cli.JinxCli'
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = 'jinx-cli'
            pom {
                name = 'jinx-cli'
                description = 'Jinx CLI'
                url = 'https://github.com/yyubin/jinx'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'yyubin'
                        name = 'Yubin'
                        email = 'yyubin@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/yyubin/jinx.git'
                    developerConnection = 'scm:git:ssh://github.com/yyubin/jinx.git'
                    url = 'https://github.com/yyubin/jinx'
                }
            }
        }
    }
}

if (project.findProperty("signingKey") != null) {
    signing {
        def key = project.findProperty("signingKey") ?: System.getenv('ORG_GRADLE_PROJECT_signingKey')
        def pass = project.findProperty("signingPassword") ?: System.getenv('ORG_GRADLE_PROJECT_signingPassword')
        useInMemoryPgpKeys(key, pass)
        sign publishing.publications.mavenJava
    }
}
