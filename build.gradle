plugins {
    id 'java'
}

group = 'org.jinx'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}


ext {
    versions = [
            junit        : '5.10.0',
            jackson      : '2.15.2',
            lombok       : '1.18.32',
            picocli      : '4.7.5',
            jpaApi       : '3.1.0',
            autoService  : '1.1.1',
            mockito      : '5.4.0',
            assertj      : '3.27.3',
    ]
}


subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    group = 'org.jinx'
    version = '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    jacoco {
        toolVersion = "0.8.12"
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:${versions.lombok}"
        annotationProcessor "org.projectlombok:lombok:${versions.lombok}"

        testImplementation platform("org.junit:junit-bom:${versions.junit}")
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testImplementation "org.mockito:mockito-core:${versions.mockito}"
        testImplementation("org.assertj:assertj-core:${versions.assertj}")
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        executionData fileTree(dir: "$buildDir", includes: [
                "jacoco/test.exec", "jacoco/test*.exec"
        ])
        reports {
            xml.required = true
            html.required = true
        }

        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: [
                        '**/*$MockitoMock$*.*',
                        '**/model/**',
                        '**/*Builder*.*' // Lombok 빌더 클래스 제외
                ])
            }))
        }
    }
}
